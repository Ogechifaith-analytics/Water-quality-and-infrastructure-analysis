/*join the visits table to the auditor_report table. Make sure to select subjective_quality_score,
 record_id and location_id.*/
SELECT
a.location_id AS audit_location,
a.true_water_source_score,
v.location_id AS visit_location,
v.record_id
FROM
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id;

-- JOIN the visits table and the water_quality table, using the record_id as the connecting key.
SELECT
a.location_id AS audit_location,
a.true_water_source_score,
v.location_id AS visit_location,
v.record_id,
subjective_quality_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id;

/*It doesn't matter if your columns are in a different format, because we are about to clean this up a bit. 
Since it is a duplicate, we can drop one of the location_id columns. Let's leave record_id and rename 
the scores to surveyor_score and auditor_score to make it clear which scores we're looking at in the
 results set*/
SELECT
a.location_id AS location_id,
v.record_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id;

-- A good starting point is to check if the auditor's and exployees' scores agree. There are many ways to do it. We can have a WHERE clause and check if surveyor_score = auditor_score, or we can subtract the two scores and check if the result is 0.
SELECT
a.location_id AS location_id,
v.record_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
WHERE a.true_water_source_score = wq.subjective_quality_score;

/* Some of the locations were visited multiple times, so these records are duplicated here. To fix it, 
we set visits.visit_count= 1 in the WHERE clause. Make sure you reference the alias you used for visits 
in the join*/
SELECT
a.location_id AS location_id,
v.record_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
WHERE v.visit_count = 1 AND
a.true_water_source_score = wq.subjective_quality_score;

/* With the duplicates removed I now get 1518. What does this mean considering the auditor visited 1620 sites? 
But that means that 102 records are incorrect. So let's look at those. You can do it by adding one character 
in the last query!*/
SELECT
a.location_id AS location_id,
v.record_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
WHERE v.visit_count = 1 AND
a.true_water_source_score != wq.subjective_quality_score;

/* Next,select the type_of_water_source column from the water_source table and call it survey_source, 
using the source_id column to JOIN. Also select the type_of_water_source from the auditor_report table, 
and call it auditor_source.*/
SELECT
a.location_id AS location_id,
a.type_of_water_source AS auditor_source,
ws.type_of_water_source AS surveyor_source,
v.record_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
JOIN water_source ws
ON ws.source_id = v.source_id
WHERE v.visit_count = 1 AND
a.true_water_source_score != wq.subjective_quality_score;

/* JOIN the assigned_employee_id for all the people on our list from the visits table to our query. 
Remember, our query shows 102 incorrect records, so when we join the employee data, we can see which employees
 made these incorrect records.*/
SELECT
a.location_id AS location_id,
v.record_id,
v.assigned_employee_id,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
WHERE v.visit_count = 1 AND
a.true_water_source_score != wq.subjective_quality_score;

/*So now we can link the incorrect records to the employees who recorded them. The ID's don't help us to 
identify them. */
SELECT
a.location_id AS location_id,
v.record_id,
e.employee_name,
a.true_water_source_score AS auditor_score,
wq.subjective_quality_score AS surveyor_score
FROM 
auditor_report a
JOIN 
visits v
ON a.location_id = v.location_id
JOIN
water_quality wq
ON v.record_id = wq.record_id
JOIN 
employee e
ON v.assigned_employee_id = e.assigned_employee_id
WHERE v.visit_count = 1 AND
a.true_water_source_score != wq.subjective_quality_score;
