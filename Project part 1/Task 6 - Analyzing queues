-- Analysing queues: uncovering when citizens collect water 

SELECT *
FROM visits;

SELECT
DATEDIFF(MAX(time_of_record), MIN(time_of_record)) AS num_of_days
FROM visits;

SELECT 
    ROUND(AVG(NULLIF(time_in_queue,0)))
FROM
    visits;
    
SELECT
 dayname(time_of_record) AS day,
 ROUND(AVG(NULLIF(time_in_queue,0))) AS avg_time_in_queue
FROM
    visits
    GROUP BY dayname(time_of_record);
    
SELECT
TIME_FORMAT(TIME(time_of_record), '%H:00') AS hour_of_day,
 ROUND(AVG(NULLIF(time_in_queue,0))) AS avg_time_in_queue
FROM
    visits
    GROUP BY hour_of_day
    ORDER BY avg_time_in_queue DESC;
    

SELECT
TIME_FORMAT(TIME(time_of_record), '%H:00') AS hour_of_day,
-- Sunday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Sunday' THEN time_in_queue
ELSE NULL
END
),0) AS Sunday,
-- Monday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Monday' THEN time_in_queue
ELSE NULL
END
),0) AS Monday,
-- Tuesday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Tuesday' THEN time_in_queue
ELSE NULL
END
),0) AS Tuesday,
-- Wednesday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Wednesday' THEN time_in_queue
ELSE NULL
END
),0) AS Wednesday,
-- Thursday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Thursday' THEN time_in_queue
ELSE NULL
END
),0) AS Thursday,
-- Friday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Friday' THEN time_in_queue
ELSE NULL
END
),0) AS Friday,
-- Saturday
ROUND(AVG(
CASE
WHEN DAYNAME(time_of_record) = 'Saturday' THEN time_in_queue
ELSE NULL
END
),0) AS Saturday
FROM
visits
WHERE
time_in_queue != 0 -- this excludes other sources with 0 queue times
GROUP BY
hour_of_day
ORDER BY
hour_of_day;
